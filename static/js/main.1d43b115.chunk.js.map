{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","hasActiveSort","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","cn","onClick","type","map","good","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"yPAOaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAgBJ,GAAaE,EAC7BG,EA7BR,SAA0BC,EAAON,EAAWE,GAC1C,IAAMK,EAAa,YAAOD,GAqB1B,OAnBIN,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKJ,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXV,GACFK,EAAcM,UAGTN,EAOcO,CAAiBnB,EAAiB,CACrDK,YAAWE,eAOb,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEA,UAAWC,IACT,SACA,UACA,CAAE,WAAYhB,IAAcJ,IAE9BqB,QAAS,kBAAMhB,EAAaL,IAC5BsB,KAAK,SAPP,iCAYA,wBACEH,UAAWC,IACT,SACA,aACA,CAAE,WAAYhB,IAAcH,IAE9BoB,QAAS,kBAAMhB,EAAaJ,IAC5BqB,KAAK,SAPP,4BAYA,wBACEH,UAAWC,IACT,SACA,aACA,CAAE,YAAad,IAEjBe,QAAS,kBAAMd,GAAeD,IAC9BgB,KAAK,SAPP,qBAYCd,GACC,wBACEc,KAAK,SACLH,UAAU,4BACVE,QAhDgB,WACxBhB,EAAa,IACbE,EAAc,OA2CR,sBAUJ,6BACGE,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIC,wBC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d43b115.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField, isReversed) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState();\n  const hasActiveSort = sortField || isReversed;\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField, isReversed,\n  });\n  const handleButtonReset = () => {\n    setSortField('');\n    setIsReversed(null);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_NAME },\n          )}\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          type=\"button\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n        >\n          Sort by length\n        </button>\n\n        <button\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n        >\n          Reverse\n        </button>\n\n        {hasActiveSort && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleButtonReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={uuidv4()}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}